var searchIndex = {};
searchIndex["indextree"] = {"doc":"# Arena based tree data structure","items":[[3,"NodeId","indextree","A node identifier within a particular `Arena`",null,null],[3,"Node","","A node within a particular `Arena`",null,null],[12,"data","","The actual data which will be stored within the tree",0,null],[3,"Arena","","An `Arena` structure containing certain Nodes",null,null],[3,"Ancestors","","An iterator of references to the ancestors a given node.",null,null],[3,"PrecedingSiblings","","An iterator of references to the siblings before a given node.",null,null],[3,"FollowingSiblings","","An iterator of references to the siblings after a given node.",null,null],[3,"Children","","An iterator of references to the children of a given node.",null,null],[3,"ReverseChildren","","An iterator of references to the children of a given node, in reverse order.",null,null],[3,"Descendants","","An iterator of references to a given node and its descendants, in tree order.",null,null],[3,"Traverse","","An iterator of references to a given node and its descendants, in tree order.",null,null],[3,"ReverseTraverse","","An iterator of references to a given node and its descendants, in reverse tree order.",null,null],[4,"NodeEdge","","Indicator if the node is at a start or endpoint of the tree",null,null],[13,"Start","","Indicates that start of a node that has children. Yielded by `Traverse::next` before the\nnode’s descendants. In HTML or XML, this corresponds to an opening tag like `&lt;div&gt;`",1,null],[13,"End","","Indicates that end of a node that has children. Yielded by `Traverse::next` after the\nnode’s descendants. In HTML or XML, this corresponds to a closing tag like `&lt;/div&gt;`",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"new","","Create a new empty `Arena`",3,{"inputs":[],"output":{"name":"arena"}}],[11,"new_node","","Create a new node from its associated data.",3,null],[11,"index","","",3,null],[11,"index_mut","","",3,null],[11,"parent","","Return the ID of the parent node, unless this node is the root of the tree.",0,null],[11,"first_child","","Return the ID of the first child of this node, unless it has no child.",0,null],[11,"last_child","","Return the ID of the last child of this node, unless it has no child.",0,null],[11,"previous_sibling","","Return the ID of the previous sibling of this node, unless it is a first child.",0,null],[11,"next_sibling","","Return the ID of the previous sibling of this node, unless it is a first child.",0,null],[11,"ancestors","","Return an iterator of references to this node and its ancestors.",2,null],[11,"preceding_siblings","","Return an iterator of references to this node and the siblings before it.",2,null],[11,"following_siblings","","Return an iterator of references to this node and the siblings after it.",2,null],[11,"children","","Return an iterator of references to this node’s children.",2,null],[11,"reverse_children","","Return an iterator of references to this node’s children, in reverse order.",2,null],[11,"descendants","","Return an iterator of references to this node and its descendants, in tree order.",2,null],[11,"traverse","","Return an iterator of references to this node and its descendants, in tree order.",2,null],[11,"reverse_traverse","","Return an iterator of references to this node and its descendants, in tree order.",2,null],[11,"detach","","Detach a node from its parent and siblings. Children are not affected.",2,null],[11,"append","","Append a new child to this node, after existing children.",2,null],[11,"prepend","","Prepend a new child to this node, before existing children.",2,null],[11,"insert_after","","Insert a new sibling after this node.",2,null],[11,"insert_before","","Insert a new sibling before this node.",2,null],[11,"next","","",4,null],[11,"next","","",5,null],[11,"next","","",6,null],[11,"next","","",7,null],[11,"next","","",8,null],[11,"next","","",9,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"next","","",10,null],[11,"next","","",11,null]],"paths":[[3,"Node"],[4,"NodeEdge"],[3,"NodeId"],[3,"Arena"],[3,"Ancestors"],[3,"PrecedingSiblings"],[3,"FollowingSiblings"],[3,"Children"],[3,"ReverseChildren"],[3,"Descendants"],[3,"Traverse"],[3,"ReverseTraverse"]]};
initSearch(searchIndex);
